{"name":"Nemea","tagline":"System for network traffic analysis and anomaly detection.","body":"NEMEA System\r\n============\r\n\r\nTravis CI build: [![Build Status](https://travis-ci.org/CESNET/Nemea.svg?branch=master)](https://travis-ci.org/CESNET/Nemea)\r\n\r\nThe Nemea system consists of:\r\n* [Nemea framework](https://github.com/CESNET/Nemea-Framework): The heart of the system that provides interconnection of modules, data format (and its handling) and common functions, algorithms and data structures.\r\n* [Nemea modules](https://github.com/CESNET/Nemea-Modules): Base modules of the system for export&storage of flow data, replay of stored flow data, filtering, merging, and others. It also contains a basic flow exporter capable of L7 information. \r\n* [Nemea detectors](https://github.com/CESNET/Nemea-Detectors): Detection modules that can detect and report various types of malicious traffic such as DoS, DDoS, scanning, bruteforce attacks.\r\n* [Nemea Supervisor](https://github.com/CESNET/Nemea-Supervisor): Central management and monitoring module of the Nemea system. It takes care of running modules according to configuration.\r\n\r\nThis file describes the installation and basic usage of the Nemea system.\r\nTo see more general information, please have a look at\r\nhttps://www.liberouter.org/nemea.\r\n\r\nInstallation\r\n============\r\n\r\nFor the list of dependencies, please have a look into [dependencies.md](./dependencies.md).\r\n\r\nThere are three different ways of installation of the Nemea system covered\r\nin this document: vagrant, binary packages and spurce codes.\r\n\r\nVagrant\r\n-------\r\n\r\nTo try the system \"out-of-box\", you can use [Vagrant](https://www.vagrantup.com/).\r\nFor more information see [./vagrant/](./vagrant/).\r\n\r\nBinary packages\r\n---------------\r\n\r\nThe Nemea system can be installed from binary packages. Information will\r\nbe supplied soon.\r\n\r\nSource Codes installation\r\n-------------------------\r\n\r\nThe whole system is based on GNU/Autotools build system that makes dependency checking and\r\nbuilding process much more easier.\r\n\r\nTo clone the read-only repositories, use:\r\n\r\n```\r\ngit clone --recursive https://github.com/CESNET/nemea\r\n```\r\n\r\nAfter successful clone, use:\r\n```\r\n./bootstrap.sh\r\n```\r\nthat will create `configure` scripts and other needed files.\r\n\r\nThe `configure` script supplies various possibilities of\r\nconfiguration and it uses some environmental variables that influence the build\r\nand compilation process. For more information see:\r\n```\r\n./configure --help\r\n```\r\n\r\nWe recommend to set paths according to the used operating system e.g.:\r\n```\r\n./configure --prefix=/usr --bindir=/usr/bin/nemea --sysconfdir=/etc/nemea --libdir=/usr/lib64\r\n```\r\n\r\nAfter finishing `./configure`, build process can be started by:\r\n\r\n```\r\nmake\r\n```\r\n\r\nThe make(1) tool has various parameters, to build the Nemea package faster on\r\nmulticore systems, we recommend to use parameter -j with the number of jobs\r\nthat should be run in parallel.\r\n\r\nWhen the compilation process ends without any error, the package can be installed\r\ninto paths that were set by `configure`. It is recommended NOT to change\r\ntarget paths by passing variables directly to make(1).\r\nThe installation can be done by (usually it requires root / sudo):\r\n\r\n```\r\nmake install\r\n```\r\n\r\nCongratulations, the whole Nemea system should be installed right now... :-)\r\n\r\nQuick Start Guide\r\n=================\r\n\r\nThe heart of the Nemea system is a Nemea module. Nemea modules are building blocks - independent system processes\r\nthat can be connected with each other. Information about every module can be found in its help:\r\n````\r\n./module -h\r\n```\r\n\r\nEvery Nemea module can have one or more communication interfaces (IFC) implemented in\r\n[libtrap](https://github.com/CESNET/Nemea-Framework/tree/master/libtrap). There are two types of IFCs: **input** and **output**. Numbers of module's IFCs\r\ncan be found in its help.\r\n\r\nAt the beginning, let's try the `logreplay` module ([modules/logreplay](https://github.com/CESNET/Nemea-Modules/tree/master/logreplay)).\r\nThe help output shows that `logreplay` has one output IFC:\r\n```\r\nName: LogReplay\r\nInputs: 0\r\nOutputs: 1\r\nDescription:\r\n  This module converts CSV from logger and sends it in UniRec. The first row\r\n  of CSV file has to be data format of fields.\r\n```\r\n\r\nThe complement module is `logger` ([modules/logger](https://github.com/CESNET/Nemea-Modules/tree/master/logger)), help output:\r\n```\r\nName: Logger\r\nInputs: variable\r\nOutputs: 0\r\nDescription:\r\n  This module logs all incoming UniRec records to standard output or into a\r\n  specified file. Each record is written as one line containing values of its\r\n  fields in human-readable format separated by chosen delimiters (CSV format).\r\n  If you use more than one input interface you have to specify output format\r\n  by parameter \"-o\".\r\n```\r\n\r\nTwo modules can be interconnected using one input IFC and one output IFC.\r\n\r\nThe [./use-cases](./use-cases) directory contains example scripts that demonstrate usage and functionality of\r\nNemea modules. `logreplay` and `logger` can be found in [./use-cases/logger-repeater.sh](./use-cases/logger-repeater.sh).\r\nStart the script to see how flow records are replayed from CSV file by `logreplay` and received by `logger`:\r\n```\r\ncd use-cases\r\n./logger-repeater.sh generate\r\n```\r\n\r\nTo get usage of scripts from `use-cases`, execute a script without parameter. The `generate` parameter of\r\n`logger-repeater.sh` can be used to generate CSV file automatically. For more information, see source codes of\r\nscripts.\r\n\r\n`logreplay` is one of possible ways of getting data into the Nemea system.\r\nThere is a [nfreader](https://github.com/CESNET/Nemea-modules/tree/master/nfreader) module that is able to read and replay `nfdump` files.\r\nLast but not least, there is an [ipfixcol](https://github.com/CESNET/ipfixcol/) with [ipfixcol2unirec](https://github.com/CESNET/ipfixcol/tree/master/plugins/storage/unirec)\r\nthat is capable of exporting flow data in UniRec format and sending it via libtrap IFC.\r\n\r\nManage Nemea modules efficiently\r\n================================\r\n\r\nThe Nemea system can be managed and monitored by a special module called\r\n[Supervisor](https://github.com/CESNET/Nemea-Supervisor).\r\n\r\nSome modules that are contained in Nemea-Modules and Nemea-Detectors provide their default\r\nconfiguration in [nemea-supervisor/configs/](https://github.com/CESNET/Nemea-Supervisor/tree/master/configs/).\r\nTo use prepared configuration, run `make` in `nemea-supervisor/configs` and start:\r\n```\r\nnemea-supervisor/supervisor -f nemea-supervisor/configs/supervisor_config.xml\r\n```\r\nTo start `supervisor` in an interactive mode, use `-d`\r\n\r\nFor more information about Supervisor see its README.\r\n\r\nNote: It is totally up to user whether to use `nemea-supervisor/configs` or not.  It is just\r\nan example of working configuration.\r\n\r\n\r\nNemea Related Publications\r\n==========================\r\n\r\n* Tomáš Čejka, Radoslav Bodó, Hana Kubátová: Nemea: Searching for Botnet Footprints. In: Proceedings of the 3rd Prague Embedded Systems Workshop, Prague, Czech Republic, 2015.\r\n\r\n* Tomáš Čejka, Václav Bartoš, Lukáš Truxa, Hana Kubátová: [Using Application-Aware Flow Monitoring for SIP Fraud Detection](http://link.springer.com/chapter/10.1007/978-3-319-20034-7_10). In: Proc. of 9th International Conference on Autonomous Infrastructure, Management and Security (AIMS15), 2015.\r\n\r\n* Tomáš Čejka, Zdeněk Rosa and Hana Kubátová: [Stream-wise Detection of Surreptitious Traffic over DNS](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&arnumber=7033254). In: 2014 IEEE 19th International Workshop on Computer Aided Modeling and Design of Communication Links and Networks (CAMAD) (CAMAD 2014). Athens, 2014\r\n\r\n* V. Bartos, M. Zadnik, T. Cejka: [Nemea: Framework for stream-wise analysis of network traffic](http://www.cesnet.cz/wp-content/uploads/2014/02/trapnemea.pdf), CESNET technical report 6/2013.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}